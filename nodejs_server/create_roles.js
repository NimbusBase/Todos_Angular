// Generated by CoffeeScript 1.6.3
var AWS, adminRole, child_process, createAdminRole, createReaderRole, createWriterRole, db, exec, exec_call, iam, policy_login, readerRole, uuid, writerRole;

AWS = require('aws-sdk');

uuid = require('node-uuid');

child_process = require('child_process');

exec = child_process.exec;

exec_call = function(err, stdout, stderr) {
  if (err) {
    return console.log("got error  in child_process:" + err);
  } else {
    if (stdout != null) {
      console.log(stdout);
    }
    if (stderr != null) {
      return console.log(stderr);
    }
  }
};

db = new AWS.DynamoDB({
  region: 'us-west-2'
});

iam = new AWS.IAM();

policy_login = "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Federated\": \"www.amazon.com\"\n      },\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n\n      \"Condition\": {\n        \"StringEquals\": {\n          \"www.amazon.com:app_id\": \"amzn1.application.e133066ca0db4161ba51a41464636bb1\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Federated\": \"accounts.google.com\"\n      },\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"accounts.google.com:aud\": \"195693500289.apps.googleusercontent.com\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Federated\": \"graph.facebook.com\"\n      },\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"graph.facebook.com:app_id\": \"1453289431565183\"\n        }\n      }\n    }\n  ]\n}";

createAdminRole = function() {
  var params;
  params = {
    Path: "/",
    RoleName: "admin",
    AssumeRolePolicyDocument: policy_login
  };
  return iam.createRole(params, function(err, data) {
    if (err) {
      return console.log(err);
    } else {
      console.log(JSON.stringify(data));
      return adminRole();
    }
  });
};

adminRole = function() {
  var params, policy_admin;
  policy_admin = "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"dynamodb:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}";
  params = {
    RoleName: "admin",
    PolicyName: "admin",
    PolicyDocument: policy_admin
  };
  return iam.putRolePolicy(params, function(err, data) {
    if (err) {
      return console.log(err);
    } else {
      return console.log(JSON.stringify(data));
    }
  });
};

createReaderRole = function() {
  var params;
  params = {
    Path: "/",
    RoleName: "reader",
    AssumeRolePolicyDocument: policy_login
  };
  return iam.createRole(params, function(err, data) {
    if (err) {
      return console.log(err);
    } else {
      console.log(JSON.stringify(data));
      return readerRole();
    }
  });
};

readerRole = function() {
  var params, policy_reader;
  policy_reader = "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"dynamodb:GetItem\",\n        \"dynamodb:BatchGetItem\",\n        \"dynamodb:Query\",\n        \"dynamodb:Scan\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:ListTables\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}";
  params = {
    RoleName: "reader",
    PolicyName: "reader",
    PolicyDocument: policy_reader
  };
  return iam.putRolePolicy(params, function(err, data) {
    if (err) {
      return console.log(err);
    } else {
      return console.log(JSON.stringify(data));
    }
  });
};

createWriterRole = function() {
  var params;
  params = {
    Path: "/",
    RoleName: "writer",
    AssumeRolePolicyDocument: policy_login
  };
  return iam.createRole(params, function(err, data) {
    if (err) {
      return console.log(err);
    } else {
      console.log(JSON.stringify(data));
      return writerRole();
    }
  });
};

writerRole = function() {
  var params, policy_writer;
  policy_writer = "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"dynamodb:BatchGetItem\",\n        \"dynamodb:BatchWriteItem\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:GetItem\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:BatchGetItem\",\n        \"dynamodb:Scan\",\n        \"dynamodb:Query\",\n        \"dynamodb:BatchGetItem\",\n        \"dynamodb:ListTables\",\n        \"dynamodb:UpdateTable\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Action\": [\n        \"dynamodb:UpdateItem\",\n        \"dynamodb:DeleteItem\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"ForAllValues:StringEquals\": {\n          \"dynamodb:LeadingKeys\": [\n            \"${www.amazon.com:user_id}\",\n            \"${graph.facebook.com:id}\",\n            \"${accounts.google.com:sub}\"\n          ]\n        }\n      }\n    }\n  ]\n}";
  params = {
    RoleName: "writer",
    PolicyName: "writer",
    PolicyDocument: policy_writer
  };
  return iam.putRolePolicy(params, function(err, data) {
    if (err) {
      return console.log(err);
    } else {
      return console.log(JSON.stringify(data));
    }
  });
};

createAdminRole();

createReaderRole();

createWriterRole();
