// Generated by CoffeeScript 1.6.3
var AWS;

AWS = require('aws-sdk');

exports.db = new AWS.DynamoDB({
  region: 'us-west-2'
});

exports.iam = new AWS.IAM();

exports.addUser = function(req, res) {
  var app_name, email, params, role;
  app_name = req.query.app;
  email = req.query.email;
  role = req.query.role;
  res.contentType('json');
  params = {
    "TableName": "NimbusAppControl",
    "Item": {
      "email": {
        "S": email
      },
      "app": {
        "S": app_name
      },
      "role": {
        "S": role
      }
    }
  };
  return exports.db.putItem(params, function(err, data) {
    if (err) {
      console.log(err);
      return res.send(JSON.stringify({
        status: "error",
        action: "addUser",
        info: err
      }));
    } else {
      console.log(JSON.stringify(data));
      return res.send(JSON.stringify({
        status: "success",
        action: "addUser"
      }));
    }
  });
};

exports.deleteUser = function(req, res) {
  var app_name, email, param;
  app_name = req.query.app;
  email = req.query.email;
  res.contentType('json');
  param = {
    "TableName": "NimbusAppControl",
    "Key": {
      "email": {
        "S": email
      },
      "app": {
        "S": app_name
      }
    },
    "Expected": {
      "email": {
        "Value": {
          "S": email
        },
        "Exists": true
      },
      "app": {
        "Value": {
          "S": app_name
        },
        "Exists": true
      }
    },
    "ReturnValues": "ALL_OLD"
  };
  return exports.db.deleteItem(param, function(err, data) {
    if (err) {
      console.log(err);
      return res.send(JSON.stringify({
        status: "error",
        action: "delete",
        info: err
      }));
    } else {
      console.log(JSON.stringify(data));
      return res.send(JSON.stringify({
        status: "success",
        action: "delete"
      }));
    }
  });
};

exports.getRole = function(req, res) {
  var app_name, email, params;
  app_name = req.query.app;
  email = req.query.email;
  res.contentType('json');
  res.header('Access-Control-Allow-Origin', req.headers.origin);
  res.header('Access-Control-Allow-Methods', req.headers['access-control-request-method']);
  res.header('Access-Control-Allow-Headers', req.headers['access-control-request-headers']);
  res.header('Access-Control-Max-Age', 60 * 60 * 24 * 365);
  params = {
    "AttributesToGet": ["email", "app", "role"],
    "Limit": 100,
    "ReturnConsumedCapacity": "TOTAL",
    "ScanFilter": {
      "email": {
        "AttributeValueList": [
          {
            "S": email
          }
        ],
        "ComparisonOperator": "EQ"
      },
      "app": {
        "AttributeValueList": [
          {
            "S": app_name
          }
        ],
        "ComparisonOperator": "EQ"
      }
    },
    "TableName": "NimbusAppControl"
  };
  return exports.db.scan(params, function(err, data) {
    var r, x;
    if (err) {
      console.log(err);
      return res.send(JSON.stringify({
        status: "error",
        info: err
      }));
    } else {
      console.log(JSON.stringify(data));
      if (data.Count > 0) {
        x = data.Items[0];
        r = x.role.S;
      } else {
        r = "reader";
      }
      params = {
        RoleName: r
      };
      return exports.iam.getRole(params, function(err, data) {
        var role_arn, role_name;
        if (err) {
          return res.send(JSON.stringify({
            status: "error",
            info: err
          }));
        } else {
          role_arn = data.Role.Arn;
          role_name = data.Role.RoleName;
          return res.send(JSON.stringify({
            status: "success",
            "arn": role_arn,
            "name": role_name
          }));
        }
      });
    }
  });
};
